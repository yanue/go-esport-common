// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/base.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PBool struct {
	B                    bool     `protobuf:"varint,1,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PBool) Reset()         { *m = PBool{} }
func (m *PBool) String() string { return proto.CompactTextString(m) }
func (*PBool) ProtoMessage()    {}
func (*PBool) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_4a44029a10b8a265, []int{0}
}
func (m *PBool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PBool.Unmarshal(m, b)
}
func (m *PBool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PBool.Marshal(b, m, deterministic)
}
func (dst *PBool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PBool.Merge(dst, src)
}
func (m *PBool) XXX_Size() int {
	return xxx_messageInfo_PBool.Size(m)
}
func (m *PBool) XXX_DiscardUnknown() {
	xxx_messageInfo_PBool.DiscardUnknown(m)
}

var xxx_messageInfo_PBool proto.InternalMessageInfo

func (m *PBool) GetB() bool {
	if m != nil {
		return m.B
	}
	return false
}

type PSingleString struct {
	Str                  string   `protobuf:"bytes,1,opt,name=Str,proto3" json:"Str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PSingleString) Reset()         { *m = PSingleString{} }
func (m *PSingleString) String() string { return proto.CompactTextString(m) }
func (*PSingleString) ProtoMessage()    {}
func (*PSingleString) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_4a44029a10b8a265, []int{1}
}
func (m *PSingleString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PSingleString.Unmarshal(m, b)
}
func (m *PSingleString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PSingleString.Marshal(b, m, deterministic)
}
func (dst *PSingleString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PSingleString.Merge(dst, src)
}
func (m *PSingleString) XXX_Size() int {
	return xxx_messageInfo_PSingleString.Size(m)
}
func (m *PSingleString) XXX_DiscardUnknown() {
	xxx_messageInfo_PSingleString.DiscardUnknown(m)
}

var xxx_messageInfo_PSingleString proto.InternalMessageInfo

func (m *PSingleString) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

type PInt32 struct {
	I32                  int32    `protobuf:"varint,1,opt,name=i32,proto3" json:"i32,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PInt32) Reset()         { *m = PInt32{} }
func (m *PInt32) String() string { return proto.CompactTextString(m) }
func (*PInt32) ProtoMessage()    {}
func (*PInt32) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_4a44029a10b8a265, []int{2}
}
func (m *PInt32) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PInt32.Unmarshal(m, b)
}
func (m *PInt32) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PInt32.Marshal(b, m, deterministic)
}
func (dst *PInt32) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PInt32.Merge(dst, src)
}
func (m *PInt32) XXX_Size() int {
	return xxx_messageInfo_PInt32.Size(m)
}
func (m *PInt32) XXX_DiscardUnknown() {
	xxx_messageInfo_PInt32.DiscardUnknown(m)
}

var xxx_messageInfo_PInt32 proto.InternalMessageInfo

func (m *PInt32) GetI32() int32 {
	if m != nil {
		return m.I32
	}
	return 0
}

type PInt64 struct {
	I64                  int64    `protobuf:"varint,1,opt,name=i64,proto3" json:"i64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PInt64) Reset()         { *m = PInt64{} }
func (m *PInt64) String() string { return proto.CompactTextString(m) }
func (*PInt64) ProtoMessage()    {}
func (*PInt64) Descriptor() ([]byte, []int) {
	return fileDescriptor_base_4a44029a10b8a265, []int{3}
}
func (m *PInt64) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PInt64.Unmarshal(m, b)
}
func (m *PInt64) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PInt64.Marshal(b, m, deterministic)
}
func (dst *PInt64) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PInt64.Merge(dst, src)
}
func (m *PInt64) XXX_Size() int {
	return xxx_messageInfo_PInt64.Size(m)
}
func (m *PInt64) XXX_DiscardUnknown() {
	xxx_messageInfo_PInt64.DiscardUnknown(m)
}

var xxx_messageInfo_PInt64 proto.InternalMessageInfo

func (m *PInt64) GetI64() int64 {
	if m != nil {
		return m.I64
	}
	return 0
}

func init() {
	proto.RegisterType((*PBool)(nil), "proto.PBool")
	proto.RegisterType((*PSingleString)(nil), "proto.PSingleString")
	proto.RegisterType((*PInt32)(nil), "proto.PInt32")
	proto.RegisterType((*PInt64)(nil), "proto.PInt64")
}

func init() { proto.RegisterFile("proto/base.proto", fileDescriptor_base_4a44029a10b8a265) }

var fileDescriptor_base_4a44029a10b8a265 = []byte{
	// 134 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0x28, 0xca, 0x2f,
	0xc9, 0xd7, 0x4f, 0x4a, 0x2c, 0x4e, 0xd5, 0x03, 0x33, 0x85, 0x58, 0xc1, 0x94, 0x92, 0x28, 0x17,
	0x6b, 0x80, 0x53, 0x7e, 0x7e, 0x8e, 0x10, 0x0f, 0x17, 0x63, 0x92, 0x04, 0xa3, 0x02, 0xa3, 0x06,
	0x47, 0x10, 0x63, 0x92, 0x92, 0x22, 0x17, 0x6f, 0x40, 0x70, 0x66, 0x5e, 0x7a, 0x4e, 0x6a, 0x70,
	0x49, 0x51, 0x66, 0x5e, 0xba, 0x90, 0x00, 0x17, 0x73, 0x70, 0x49, 0x11, 0x58, 0x01, 0x67, 0x10,
	0x88, 0xa9, 0x24, 0xc5, 0xc5, 0x16, 0xe0, 0x99, 0x57, 0x62, 0x6c, 0x04, 0x92, 0xcb, 0x34, 0x36,
	0x02, 0xcb, 0xb1, 0x06, 0x81, 0x98, 0x30, 0x39, 0x33, 0x13, 0xb0, 0x9c, 0x99, 0x09, 0x58, 0x8e,
	0x39, 0x08, 0xc4, 0x4c, 0x62, 0x03, 0x5b, 0x6c, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xde, 0x31,
	0x87, 0xfd, 0x93, 0x00, 0x00, 0x00,
}
