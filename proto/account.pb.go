// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/account.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 登陆方式
type ELoginType int32

const (
	ELoginType_ACCOUNT ELoginType = 0
	ELoginType_PHONE   ELoginType = 1
	ELoginType_WECHAT  ELoginType = 2
	ELoginType_QQ      ELoginType = 3
)

var ELoginType_name = map[int32]string{
	0: "ACCOUNT",
	1: "PHONE",
	2: "WECHAT",
	3: "QQ",
}
var ELoginType_value = map[string]int32{
	"ACCOUNT": 0,
	"PHONE":   1,
	"WECHAT":  2,
	"QQ":      3,
}

func (x ELoginType) String() string {
	return proto.EnumName(ELoginType_name, int32(x))
}
func (ELoginType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_account_4a9a8095430adc8e, []int{0}
}

type User struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Gender               int32    `protobuf:"varint,5,opt,name=gender,proto3" json:"gender,omitempty"`
	SchoolId             int32    `protobuf:"varint,6,opt,name=school_id,json=schoolId,proto3" json:"school_id,omitempty"`
	ClassId              int32    `protobuf:"varint,7,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	AreaId               int32    `protobuf:"varint,8,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	IdentityStatus       int32    `protobuf:"varint,9,opt,name=identity_status,json=identityStatus,proto3" json:"identity_status,omitempty"`
	Created              int32    `protobuf:"varint,10,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_4a9a8095430adc8e, []int{0}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetGender() int32 {
	if m != nil {
		return m.Gender
	}
	return 0
}

func (m *User) GetSchoolId() int32 {
	if m != nil {
		return m.SchoolId
	}
	return 0
}

func (m *User) GetClassId() int32 {
	if m != nil {
		return m.ClassId
	}
	return 0
}

func (m *User) GetAreaId() int32 {
	if m != nil {
		return m.AreaId
	}
	return 0
}

func (m *User) GetIdentityStatus() int32 {
	if m != nil {
		return m.IdentityStatus
	}
	return 0
}

func (m *User) GetCreated() int32 {
	if m != nil {
		return m.Created
	}
	return 0
}

// 登陆所需结构
type PLoginData struct {
	Phone                string     `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	VerifyCode           string     `protobuf:"bytes,2,opt,name=verify_code,json=verifyCode,proto3" json:"verify_code,omitempty"`
	Account              string     `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Password             string     `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	LoginType            ELoginType `protobuf:"varint,5,opt,name=login_type,json=loginType,proto3,enum=proto.ELoginType" json:"login_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PLoginData) Reset()         { *m = PLoginData{} }
func (m *PLoginData) String() string { return proto.CompactTextString(m) }
func (*PLoginData) ProtoMessage()    {}
func (*PLoginData) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_4a9a8095430adc8e, []int{1}
}
func (m *PLoginData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PLoginData.Unmarshal(m, b)
}
func (m *PLoginData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PLoginData.Marshal(b, m, deterministic)
}
func (dst *PLoginData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PLoginData.Merge(dst, src)
}
func (m *PLoginData) XXX_Size() int {
	return xxx_messageInfo_PLoginData.Size(m)
}
func (m *PLoginData) XXX_DiscardUnknown() {
	xxx_messageInfo_PLoginData.DiscardUnknown(m)
}

var xxx_messageInfo_PLoginData proto.InternalMessageInfo

func (m *PLoginData) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *PLoginData) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

func (m *PLoginData) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *PLoginData) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *PLoginData) GetLoginType() ELoginType {
	if m != nil {
		return m.LoginType
	}
	return ELoginType_ACCOUNT
}

// 登陆所需结构
type PRegData struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	VerifyCode           string   `protobuf:"bytes,2,opt,name=verify_code,json=verifyCode,proto3" json:"verify_code,omitempty"`
	Account              string   `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PRegData) Reset()         { *m = PRegData{} }
func (m *PRegData) String() string { return proto.CompactTextString(m) }
func (*PRegData) ProtoMessage()    {}
func (*PRegData) Descriptor() ([]byte, []int) {
	return fileDescriptor_account_4a9a8095430adc8e, []int{2}
}
func (m *PRegData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PRegData.Unmarshal(m, b)
}
func (m *PRegData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PRegData.Marshal(b, m, deterministic)
}
func (dst *PRegData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PRegData.Merge(dst, src)
}
func (m *PRegData) XXX_Size() int {
	return xxx_messageInfo_PRegData.Size(m)
}
func (m *PRegData) XXX_DiscardUnknown() {
	xxx_messageInfo_PRegData.DiscardUnknown(m)
}

var xxx_messageInfo_PRegData proto.InternalMessageInfo

func (m *PRegData) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *PRegData) GetVerifyCode() string {
	if m != nil {
		return m.VerifyCode
	}
	return ""
}

func (m *PRegData) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *PRegData) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "proto.User")
	proto.RegisterType((*PLoginData)(nil), "proto.PLoginData")
	proto.RegisterType((*PRegData)(nil), "proto.PRegData")
	proto.RegisterEnum("proto.ELoginType", ELoginType_name, ELoginType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Account service

type AccountClient interface {
	// 登陆(账号或手机号)
	Login(ctx context.Context, in *PLoginData, opts ...client.CallOption) (*User, error)
	// 注册信息
	Reg(ctx context.Context, in *PString, opts ...client.CallOption) (*User, error)
	// 获取验证码
	GetVerifyCode(ctx context.Context, in *PString, opts ...client.CallOption) (*PBool, error)
	// 获取账号信息
	GetAccountInfo(ctx context.Context, in *PInt32, opts ...client.CallOption) (*User, error)
}

type accountClient struct {
	c           client.Client
	serviceName string
}

func NewAccountClient(serviceName string, c client.Client) AccountClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "proto"
	}
	return &accountClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *accountClient) Login(ctx context.Context, in *PLoginData, opts ...client.CallOption) (*User, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Login", in)
	out := new(User)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Reg(ctx context.Context, in *PString, opts ...client.CallOption) (*User, error) {
	req := c.c.NewRequest(c.serviceName, "Account.Reg", in)
	out := new(User)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetVerifyCode(ctx context.Context, in *PString, opts ...client.CallOption) (*PBool, error) {
	req := c.c.NewRequest(c.serviceName, "Account.GetVerifyCode", in)
	out := new(PBool)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetAccountInfo(ctx context.Context, in *PInt32, opts ...client.CallOption) (*User, error) {
	req := c.c.NewRequest(c.serviceName, "Account.GetAccountInfo", in)
	out := new(User)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Account service

type AccountHandler interface {
	// 登陆(账号或手机号)
	Login(context.Context, *PLoginData, *User) error
	// 注册信息
	Reg(context.Context, *PString, *User) error
	// 获取验证码
	GetVerifyCode(context.Context, *PString, *PBool) error
	// 获取账号信息
	GetAccountInfo(context.Context, *PInt32, *User) error
}

func RegisterAccountHandler(s server.Server, hdlr AccountHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Account{hdlr}, opts...))
}

type Account struct {
	AccountHandler
}

func (h *Account) Login(ctx context.Context, in *PLoginData, out *User) error {
	return h.AccountHandler.Login(ctx, in, out)
}

func (h *Account) Reg(ctx context.Context, in *PString, out *User) error {
	return h.AccountHandler.Reg(ctx, in, out)
}

func (h *Account) GetVerifyCode(ctx context.Context, in *PString, out *PBool) error {
	return h.AccountHandler.GetVerifyCode(ctx, in, out)
}

func (h *Account) GetAccountInfo(ctx context.Context, in *PInt32, out *User) error {
	return h.AccountHandler.GetAccountInfo(ctx, in, out)
}

func init() { proto.RegisterFile("proto/account.proto", fileDescriptor_account_4a9a8095430adc8e) }

var fileDescriptor_account_4a9a8095430adc8e = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x92, 0xcd, 0x6e, 0xd3, 0x4e,
	0x14, 0xc5, 0x63, 0x27, 0xfe, 0xba, 0xf9, 0xd7, 0x7f, 0x73, 0x41, 0x60, 0xc2, 0x82, 0xca, 0x42,
	0xa2, 0xb0, 0x48, 0x51, 0xba, 0x61, 0x1b, 0x42, 0xd4, 0x5a, 0x42, 0x6d, 0xea, 0xa6, 0xb0, 0x8c,
	0xa6, 0x9e, 0x5b, 0xd7, 0x92, 0xeb, 0xb1, 0xec, 0x29, 0x55, 0xb6, 0xbc, 0x0e, 0x8f, 0xc0, 0xcb,
	0x21, 0xcf, 0xd8, 0x04, 0xe5, 0x01, 0x58, 0x65, 0x7e, 0xe7, 0x5c, 0xdd, 0x8f, 0x13, 0xc3, 0xd3,
	0xaa, 0x16, 0x52, 0x1c, 0xb3, 0x34, 0x15, 0x0f, 0xa5, 0x9c, 0x2a, 0x42, 0x4b, 0xfd, 0x4c, 0x02,
	0xed, 0xdd, 0xb0, 0x86, 0xb4, 0x11, 0xfd, 0x30, 0x61, 0x74, 0xdd, 0x50, 0x8d, 0x3e, 0x98, 0x39,
	0x0f, 0x8d, 0x43, 0xe3, 0xc8, 0x4a, 0xcc, 0x9c, 0x23, 0xc2, 0xa8, 0x64, 0xf7, 0x14, 0x9a, 0x87,
	0xc6, 0x91, 0x97, 0xa8, 0x37, 0x3e, 0x03, 0xab, 0xba, 0x13, 0x25, 0x85, 0x43, 0x25, 0x6a, 0x68,
	0x55, 0xba, 0x67, 0x79, 0x11, 0x8e, 0xb4, 0xaa, 0x00, 0x9f, 0x83, 0x9d, 0x51, 0xc9, 0xa9, 0x0e,
	0x2d, 0xd5, 0xb3, 0x23, 0x7c, 0x05, 0x5e, 0x93, 0xde, 0x09, 0x51, 0x6c, 0x72, 0x1e, 0xda, 0xca,
	0x72, 0xb5, 0x10, 0x73, 0x7c, 0x09, 0x6e, 0x5a, 0xb0, 0xa6, 0x69, 0x3d, 0x47, 0x79, 0x8e, 0xe2,
	0x98, 0xe3, 0x0b, 0x70, 0x58, 0x4d, 0xac, 0x75, 0x5c, 0xdd, 0xb0, 0xc5, 0x98, 0xe3, 0x5b, 0xf8,
	0x3f, 0xe7, 0x54, 0xca, 0x5c, 0x6e, 0x37, 0x8d, 0x64, 0xf2, 0xa1, 0x09, 0x3d, 0x55, 0xe0, 0xf7,
	0xf2, 0x95, 0x52, 0x31, 0x04, 0x27, 0xad, 0x89, 0x49, 0xe2, 0x21, 0x74, 0xbd, 0x35, 0x46, 0x3f,
	0x0d, 0x80, 0xd5, 0x17, 0x91, 0xe5, 0xe5, 0x67, 0x26, 0xd9, 0xee, 0x4c, 0xe3, 0xef, 0x33, 0x5f,
	0xc3, 0xf8, 0x3b, 0xd5, 0xf9, 0xed, 0x76, 0x93, 0x0a, 0xde, 0xe7, 0x02, 0x5a, 0x5a, 0x08, 0x4e,
	0x6d, 0xff, 0x2e, 0xf4, 0x2e, 0x9f, 0x1e, 0x71, 0x02, 0x6e, 0xc5, 0x9a, 0xe6, 0x51, 0xd4, 0xbc,
	0x0b, 0xe9, 0x0f, 0xe3, 0x07, 0x80, 0xa2, 0x9d, 0xbc, 0x91, 0xdb, 0x8a, 0x54, 0x56, 0xfe, 0xec,
	0x89, 0xfe, 0x73, 0xa6, 0x4b, 0xb5, 0xd3, 0x7a, 0x5b, 0x51, 0xe2, 0x15, 0xfd, 0x33, 0x7a, 0x04,
	0x77, 0x95, 0x50, 0xf6, 0xcf, 0x57, 0x7d, 0xff, 0x11, 0x60, 0xb7, 0x11, 0x8e, 0xc1, 0x99, 0x2f,
	0x16, 0x17, 0xd7, 0xe7, 0xeb, 0x60, 0x80, 0x1e, 0x58, 0xab, 0xb3, 0x8b, 0xf3, 0x65, 0x60, 0x20,
	0x80, 0xfd, 0x6d, 0xb9, 0x38, 0x9b, 0xaf, 0x03, 0x13, 0x6d, 0x30, 0x2f, 0x2f, 0x83, 0xe1, 0xec,
	0x97, 0x01, 0xce, 0xbc, 0x9b, 0xf0, 0x0e, 0x2c, 0xd5, 0x04, 0xfb, 0x2b, 0x77, 0xc9, 0x4f, 0xc6,
	0x9d, 0xd4, 0x7e, 0x91, 0xd1, 0x00, 0xdf, 0xc0, 0x30, 0xa1, 0x0c, 0xfd, 0xbe, 0xf0, 0x4a, 0xd6,
	0x79, 0x99, 0xed, 0x57, 0x1d, 0xc3, 0xc1, 0x29, 0xc9, 0xaf, 0xbb, 0xeb, 0xf6, 0xeb, 0xff, 0xeb,
	0xf9, 0x93, 0x10, 0x45, 0x34, 0xc0, 0x29, 0xf8, 0xa7, 0x24, 0xbb, 0x7d, 0xe2, 0xf2, 0x56, 0xe0,
	0x41, 0x5f, 0x11, 0x97, 0xf2, 0x64, 0xb6, 0x37, 0xe0, 0xc6, 0x56, 0x74, 0xf2, 0x3b, 0x00, 0x00,
	0xff, 0xff, 0x04, 0x13, 0x25, 0x22, 0x5a, 0x03, 0x00, 0x00,
}
